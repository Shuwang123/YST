{"version":3,"sources":["webpack:///src/views/scheduling/add-or-update.vue","webpack:///./src/views/scheduling/add-or-update.vue?16a5","webpack:///./src/views/scheduling/add-or-update.vue","webpack:///src/views/scheduling/index.vue","webpack:///./src/views/scheduling/index.vue?cb13","webpack:///./src/views/scheduling/index.vue"],"names":["add_or_update","_this","this","ComStore","_this2","Name","resetFields","_this3","getRoleInit","id","Id","NickName","Phone","RoleId","StoreId","_this4","item","join","UserName","RegisterAmount","Room","OrderWork","CanViewStores","objEdit","api","adminUser","adminUserEdit","adminUserAdd","obj","message","scheduling_add_or_update","render","_vm","_h","$createElement","_c","_self","directives","name","rawName","ref","attrs","width","title","close-on-click-modal","visible","on","update:visible","$event","close","handleClose","value","expression","model","dataForm","rules","dataRule","label-width","nativeOn","keyup","_k","keyCode","key","dataFormSubmit","span","_e","label","prop","placeholder","callback","$$v","$set","_v","disabled","staticStyle","display","_l","precision","min","step","max","staticClass","slot","type","click","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__","scheduling","AddOrUpdate","com_store","initID","getDataList","userName","pageIndex","pageSize","dataListLoading","data","total","val","views_scheduling","inline","paramsFather","label_0","size_1","width_2","clear_3","multiple_4","must_5","isTrigger","eventStore","changeStoreData","change","clearable","clear","icon","dataList","border","stripe","height","$store","state","documentClientIFRMAE","header-cell-style","$cxObj","tableHeaderStyle","align","common","header-align","show-tooltip-when-overflow","min-width","show-overflow-tooltip","scopedSlots","_u","fn","scope","size","addOrUpdateHandle","row","current-page","page-sizes","page-size","totalPage","layout","background","size-change","sizeChangeHandle","current-change","currentChangeHandle","refreshDataList","ssrContext"],"mappings":"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","file":"static/js/24.0acd871a47e6e2fcaad2.js","sourcesContent":["<template>\n  <el-dialog v-dialogDrag ref=\"dialog__wrapper\" :width=\"'600px'\"\n             :title=\"'编辑医生排班'\"\n             :close-on-click-modal=\"false\" :visible.sync=\"visible\"\n             @close=\"handleClose\" id='add-or-update'>\n    <el-form :model=\"dataForm\" :rules=\"dataRule\" ref=\"dataForm\"\n             v-loading=\"dataListLoading\"\n             @keyup.enter.native=\"dataFormSubmit()\" label-width=\"80px\">\n      <el-row>\n        <el-col :span=\"24\">\n          <el-form-item label=\"登陆账号\" prop=\"UserName\" v-if=\"!id\">\n            <el-input v-model=\"dataForm.UserName\" placeholder=\"请填写用户名（登陆账号，限数字或字母以后不可更改）\"></el-input>\n          </el-form-item>\n          <!--<el-form-item label=\"密码\" prop=\"Password\" v-if=\"!id\">-->\n          <!--<el-input v-model=\"dataForm.Password\" placeholder=\"填写密码或修改密码\"></el-input>-->\n          <!--</el-form-item>-->\n          <el-form-item label=\"医生\" prop=\"NickName\">\n            <el-input v-model=\"dataForm.NickName\" placeholder=\"请填写别名\" disabled></el-input>\n          </el-form-item>\n\n          <!--这申请账号时如果没有选择角色ID，默认0，提交后会导致申请账号失败-->\n          <el-form-item label=\"角色ID\" prop=\"RoleId\" style=\"display: none\">\n            <el-select v-model=\"dataForm.RoleId\"\n                       placeholder=\"一个账号只能对应单个角色且必填\" style=\"width: 350px\">\n              <el-option v-for=\"item in roleArr\" :key=\"item.value\"\n                         :value=\"item.value\" :label=\"'['+item.value+'] '+item.label\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <!--医生类型的账号，会设置挂号费 2019.07.01-->\n          <el-form-item label=\"挂号费\" prop=\"RegisterAmount\">\n            <el-input-number v-model=\"dataForm.RegisterAmount\" :precision=\"2\" :min=\"1\" :step=\"0.1\" :max=\"1000\"></el-input-number>\n          </el-form-item>\n          <el-form-item label=\"诊室\" prop=\"Room\">\n            <el-input v-model=\"dataForm.Room\" placeholder=\"诊室\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"排班\" prop=\"OrderWork\">\n            <el-input v-model=\"dataForm.OrderWork\" placeholder=\"排班\"></el-input>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"dataFormSubmit()\">确定</el-button>\n      <el-button @click=\"visible = false\">取消</el-button>\n    </span>\n  </el-dialog>\n</template>\n<script type=\"text/ecmascript-6\">\nimport API from '@/api'\nimport md5 from 'js-md5'\nimport {Currency, Phone} from '../../utils/validate'\nimport ComStore from '../common/com-store'\n\nexport default {\n  watch: {\n    'dataForm.RoleId': function (val, oldval) {\n      setTimeout(() => {\n        var isDoctor = this.roleArr.some(item => {\n          return (item.value === val && item.label.includes('医生'))\n        })\n        if (isDoctor) {\n          this.RegisterAmountInputNumber = true\n        } else {\n          this.RegisterAmountInputNumber = false\n          this.dataForm.RegisterAmount = ''\n          this.dataForm.Room = ''\n          this.dataForm.OrderWork = ''\n        }\n        // console.log(val, this.dataForm.RegisterAmount, this.RegisterAmountInputNumber)\n      }, 50)\n    }\n  },\n  data () {\n    return {\n      visible: false,\n      dataListLoading: false,\n      id: '',\n      dataForm: {\n        UserName: '',\n        // Password: '', // 申请账号的时候不需要提供密码了，后端统一初始化123456，这先注释放着\n        NickName: '',\n        Phone: '',\n        StoreId: 0, // 0 归属门店\n        RoleId: 0, // 0\n        CanViewStores: '', // '' 1,2,3 可以控制的门店，有关账号的权限范围\n\n        RegisterAmount: '', // 医生挂号费\n        Room: '', // 医生诊室\n        OrderWork: '' // 医生排班\n      },\n      RegisterAmountInputNumber: false,\n      roleArr: [], // 角色选项\n      dataRule: {\n        UserName: Currency('账号不能为空'),\n        // Password: Currency('密码不能为空'),\n        NickName: Currency('别名必填'),\n        Phone: Phone(1),\n        RegisterAmount: Currency('挂号费必填'),\n        Room: Currency('医生诊室必填'),\n        OrderWork: Currency('排班信息必填')\n        // StoreId: Currency('门店必选'),\n        // RoleId: Currency('角色必选')\n      }\n    }\n  },\n  components: {\n    ComStore\n  },\n  methods: {\n    getRoleInit () {\n      var parmet = {pageIndex: 1, pageSize: 100, isPaging: false} // 请求角色的\n      API.role.jueseList(parmet).then((result) => {\n        if (result.code === '0000') {\n          this.roleArr = result.data.map(item => {\n            return {value: item.Id, label: item.Name}\n          })\n        }\n      })\n    },\n    handleClose () {\n      this.$refs['dataForm'].resetFields()\n      this.roleArr = []\n      this.dataForm = {\n        UserName: '',\n        // Password: '',\n        NickName: '',\n        Phone: '',\n        RoleId: 0, // 0\n        RegisterAmount: '', // 医生挂号费\n        Room: '', // 医生诊室\n        OrderWork: '', // 医生排班\n        StoreId: 0, // 0\n        CanViewStores: '' // '' 1,2,3\n      }\n      this.id = ''\n      this.RegisterAmountInputNumber = false\n    },\n    // 如果是编辑账号初始化弹窗，如果新建账号，弹窗内容空\n    init (id) {\n      this.id = id || 0\n      this.visible = true\n      this.getRoleInit()\n      if (this.id) {\n        this.dataListLoading = true\n        var obj = {id: this.id}\n        API.adminUser.adminUserDetail(obj).then(result => {\n          if (result.code === '0000') {\n            this.id = result.data.Id\n            // this.dataForm.UserName = result.data.UserName\n            // this.dataForm.Password = result.data.Password\n            this.dataForm.NickName = result.data.NickName\n            this.dataForm.Phone = result.data.Phone\n\n            this.dataForm.RoleId = result.data.RoleId\n            this.dataForm.RegisterAmount = result.data.RegisterAmount // 医生类型的账号会有挂号费\n            this.dataForm.Room = result.data.Room // 医生类型的账号会有诊室\n            this.dataForm.OrderWork = result.data.OrderWork // 医生类型的账号会有排班\n\n            this.dataForm.StoreId = result.data.StoreId\n\n            this.dataListLoading = false\n          }\n        })\n      }\n    },\n    // 表单提交\n    dataFormSubmit () {\n      if (this.dataForm.StoreId === 0 || this.dataForm.StoreId === '') {\n        this.$alert('没有选择账号的归属门店', '提示', {\n          confirmButtonText: '确定',\n          callback: action => {}\n        })\n        return false\n      }\n      this.$refs['dataForm'].validate((valid) => {\n        if (this.dataForm.CanViewStores === '') {\n          this.dataForm.CanViewStores = this.dataForm.StoreId\n        } else if (\n          String(this.dataForm.CanViewStores).split(',').some(item => {\n            return this.dataForm.StoreId === Number(item)\n          })\n        ) {\n        } else {\n          this.dataForm.CanViewStores = this.dataForm.CanViewStores.split(',').concat(this.dataForm.StoreId).join()\n        }\n\n        if (valid) {\n          var obj = {\n            UserName: this.dataForm.UserName,\n            // Password: this.dataForm.Password,\n            // Password: md5(this.dataForm.Password),\n            NickName: this.dataForm.NickName,\n            RoleId: this.dataForm.RoleId,\n            RegisterAmount: this.dataForm.RegisterAmount,\n            Room: this.dataForm.Room,\n            OrderWork: this.dataForm.OrderWork,\n\n            StoreId: this.dataForm.StoreId,\n            CanViewStores: this.dataForm.CanViewStores,\n            Phone: this.dataForm.Phone,\n            id: this.id\n          }\n          // console.log(obj)\n          var objEdit = {\n            Id: this.id,\n            // UserName: this.dataForm.UserName,\n            // Password: this.dataForm.Password,\n            NickName: this.dataForm.NickName,\n            RoleId: this.dataForm.RoleId,\n            StoreId: this.dataForm.StoreId,\n            RegisterAmount: this.dataForm.RegisterAmount,\n            Room: this.dataForm.Room,\n            OrderWork: this.dataForm.OrderWork,\n\n            CanViewStores: this.dataForm.CanViewStores,\n            Phone: this.dataForm.Phone\n          }\n          // console.log(objEdit)\n          var tick = this.id ? API.adminUser.adminUserEdit(objEdit) : API.adminUser.adminUserAdd(obj)\n          tick.then(data => {\n            if (data.code === '0000') {\n              this.$message({\n                message: `${this.id ? '修改成功' : '新增成功'}`,\n                type: 'success',\n                duration: 1500,\n                onClose: () => {\n                  this.visible = false\n                  this.$emit('refreshDataList')\n                }\n              })\n            } else {\n              this.$message.error(data.message)\n            }\n            this.visible = false\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/scheduling/add-or-update.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-dialog',{directives:[{name:\"dialogDrag\",rawName:\"v-dialogDrag\"}],ref:\"dialog__wrapper\",attrs:{\"width\":'600px',\"title\":'编辑医生排班',\"close-on-click-modal\":false,\"visible\":_vm.visible,\"id\":\"add-or-update\"},on:{\"update:visible\":function($event){_vm.visible=$event},\"close\":_vm.handleClose}},[_c('el-form',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.dataListLoading),expression:\"dataListLoading\"}],ref:\"dataForm\",attrs:{\"model\":_vm.dataForm,\"rules\":_vm.dataRule,\"label-width\":\"80px\"},nativeOn:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.dataFormSubmit()}}},[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[(!_vm.id)?_c('el-form-item',{attrs:{\"label\":\"登陆账号\",\"prop\":\"UserName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请填写用户名（登陆账号，限数字或字母以后不可更改）\"},model:{value:(_vm.dataForm.UserName),callback:function ($$v) {_vm.$set(_vm.dataForm, \"UserName\", $$v)},expression:\"dataForm.UserName\"}})],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"医生\",\"prop\":\"NickName\"}},[_c('el-input',{attrs:{\"placeholder\":\"请填写别名\",\"disabled\":\"\"},model:{value:(_vm.dataForm.NickName),callback:function ($$v) {_vm.$set(_vm.dataForm, \"NickName\", $$v)},expression:\"dataForm.NickName\"}})],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"角色ID\",\"prop\":\"RoleId\"}},[_c('el-select',{staticStyle:{\"width\":\"350px\"},attrs:{\"placeholder\":\"一个账号只能对应单个角色且必填\"},model:{value:(_vm.dataForm.RoleId),callback:function ($$v) {_vm.$set(_vm.dataForm, \"RoleId\", $$v)},expression:\"dataForm.RoleId\"}},_vm._l((_vm.roleArr),function(item){return _c('el-option',{key:item.value,attrs:{\"value\":item.value,\"label\":'['+item.value+'] '+item.label}})}))],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"挂号费\",\"prop\":\"RegisterAmount\"}},[_c('el-input-number',{attrs:{\"precision\":2,\"min\":1,\"step\":0.1,\"max\":1000},model:{value:(_vm.dataForm.RegisterAmount),callback:function ($$v) {_vm.$set(_vm.dataForm, \"RegisterAmount\", $$v)},expression:\"dataForm.RegisterAmount\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"诊室\",\"prop\":\"Room\"}},[_c('el-input',{attrs:{\"placeholder\":\"诊室\"},model:{value:(_vm.dataForm.Room),callback:function ($$v) {_vm.$set(_vm.dataForm, \"Room\", $$v)},expression:\"dataForm.Room\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"排班\",\"prop\":\"OrderWork\"}},[_c('el-input',{attrs:{\"placeholder\":\"排班\"},model:{value:(_vm.dataForm.OrderWork),callback:function ($$v) {_vm.$set(_vm.dataForm, \"OrderWork\", $$v)},expression:\"dataForm.OrderWork\"}})],1)],1)],1)],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dataFormSubmit()}}},[_vm._v(\"确定\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.visible = false}}},[_vm._v(\"取消\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-776f0b2b\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/scheduling/add-or-update.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./add-or-update.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./add-or-update.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-776f0b2b\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./add-or-update.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/scheduling/add-or-update.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"mod-scheduling\">\n    <el-form :inline=\"true\" :model=\"dataForm\" @keyup.enter.native=\"getDataList()\">\n      <com-store :paramsFather=\"{\n          'label_0': '',\n          'size_1': '',\n          'width_2': '130px',\n          'clear_3': false,\n          'multiple_4': false,\n          'must_5': true,\n          'isTrigger': true\n        }\" ref=\"comStoreOne\" @eventStore=\"changeStoreData\"></com-store>\n      <el-form-item>\n        <el-select v-model=\"dataForm.roleId\" placeholder=\"请选择角色\" @change=\"getDataList()\">\n          <el-option v-for=\"item in roleArr\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\n        </el-select>\n      </el-form-item>\n      <!--<el-form-item>-->\n        <!--<el-input v-model=\"dataForm.userName\" placeholder=\"查询账号\" clearable @clear=\"getDataList()\"></el-input>-->\n      <!--</el-form-item>-->\n      <el-form-item>\n        <el-input v-model=\"dataForm.nickName\" placeholder=\"请输入医生姓名\" clearable @clear=\"getDataList()\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button icon=\"el-icon-search\" @click=\"getDataList()\">查询</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-table\n      :data=\"dataList\"\n      border stripe\n      :height=\"$store.state.documentClientIFRMAE\"\n      v-loading=\"dataListLoading\"\n      :header-cell-style=\"$cxObj.tableHeaderStyle\"\n      style=\"width: 100%;\">\n      <el-table-column type=\"index\" label=\"序号\" :align=\"$store.state.common.align\" width=\"50px\"></el-table-column>\n      <el-table-column prop=\"StoreName\" header-align=\"center\" :align=\"$store.state.common.align\" label=\"所属门店\" width=\"100\" :show-tooltip-when-overflow=\"true\"></el-table-column>\n      <el-table-column prop=\"NickName\" header-align=\"center\" align=\"center\" label=\"医生\" min-width=\"100\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column prop=\"RoleName\" header-align=\"center\" :align=\"$store.state.common.align\" label=\"角色\" min-width=\"100\"></el-table-column>\n      <el-table-column prop=\"Phone\" header-align=\"center\" :align=\"$store.state.common.align\" label=\"联系电话\" min-width=\"119\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"260\" header-align=\"center\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"text\" size=\"mini\" @click=\"addOrUpdateHandle(scope.row.Id)\">排班编辑\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      @size-change=\"sizeChangeHandle\"\n      @current-change=\"currentChangeHandle\"\n      :current-page=\"pageIndex\"\n      :page-sizes=\"[10, 13, 20, 50, 100]\"\n      :page-size=\"pageSize\"\n      :total=\"totalPage\"\n      layout=\"prev, pager, next, jumper, sizes, total\" background>\n    </el-pagination>\n\n    <add-or-update v-if=\"addOrUpdateVisible\" ref=\"addOrUpdate\" @refreshDataList=\"getDataList\"></add-or-update>\n    <!--<update-pwd v-if=\"updatePwdVisible\" ref=\"updatePwd\" @refreshDataList0=\"getDataList\"></update-pwd>-->\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\nimport AddOrUpdate from './add-or-update'\nimport ComStore from '../common/com-store'\nimport API from '@/api'\nexport default {\n  name: 'user',\n  computed: {\n  },\n  components: {\n    AddOrUpdate,\n    ComStore\n    // UpdatePwd\n  },\n  data () {\n    return {\n      addOrUpdateVisible: false,\n      // updatePwdVisible: false,\n      dataListLoading: false, // 加载\n\n      pageSize: 13,\n      pageIndex: 1,\n      totalPage: 1,\n      dataForm: {\n        userName: '',\n        nickName: '', // 别名\n        id: '', // 账号id\n        storeId: '', // 名店id ※\n        roleId: ''// 角色id\n      },\n      roleArr: [],\n      dataList: [],\n\n      countRefresh: 1 // 非主流写法\n    }\n  },\n  created () {\n    this.initID()\n  },\n  methods: {\n    // 公用门店下拉子组件的想option改变时，父组件的storedId也变化\n    changeStoreData (choseStoreId) {\n      // this.getDataList() 需手动点击查询按钮了，有点缺陷，暂时这样吧，毕竟切换门店的情况本身就很少 ？？？？？？？？？？？？？？\n    },\n    initID () {\n      API.role.jueseList({PageIndex: 1, PageSize: 1000, IsPaging: true}).then(result => {\n        if (result.code === '0000') {\n          result.data.forEach(item => {\n            if (item.Name.includes('医生')) {\n              this.roleArr.push({name: item.Name, id: item.Id})\n            }\n          })\n          this.dataForm.roleId = this.roleArr[0].id\n          this.getDataList()\n        }\n      })\n    },\n    // 获取所有账户信息列表，或分页\n    getDataList () {\n      var parmet = {\n        userName: this.dataForm.userName,\n        PageIndex: this.pageIndex,\n        PageSize: this.pageSize,\n        IsPaging: true,\n        nickName: this.dataForm.nickName, // 别名\n        id: this.dataForm.id, // 账号id\n        canViewStores: this.$store.getters.getAccountCurrentHandleStore, // 名店id 传递''返回全部（相对自己的权限内），不是传递0\n        roleId: this.dataForm.roleId// 角色id\n      }\n      // console.log(parmet)\n      this.dataListLoading = true\n      API.adminUser.adminUserList(parmet).then(response => {\n        if (response.code === '0000') {\n          if (response.data) {\n            this.dataList = response.data\n            // console.log(this.dataList)\n          }\n          this.totalPage = response.total\n        } else {\n          this.$message.error(response.message)\n        }\n        this.dataListLoading = false\n      })\n    },\n    // 每页数\n    sizeChangeHandle (val) {\n      this.pageSize = val\n      this.pageIndex = 1\n      this.getDataList()\n    },\n    // 当前页\n    currentChangeHandle (val) {\n      this.pageIndex = val\n      this.getDataList()\n    },\n    // 编辑 医生排班\n    addOrUpdateHandle (id) {\n      this.addOrUpdateVisible = true\n      this.$nextTick(() => {\n        this.$refs.addOrUpdate.init(id)\n      })\n    }\n  }\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.mod {\n  &-scheduling {\n    margin: 10px;\n    .el-pagination {\n      margin-top: 15px;\n      text-align: left;\n    }\n  }\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/scheduling/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mod-scheduling\"},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.dataForm},nativeOn:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.getDataList()}}},[_c('com-store',{ref:\"comStoreOne\",attrs:{\"paramsFather\":{\n        'label_0': '',\n        'size_1': '',\n        'width_2': '130px',\n        'clear_3': false,\n        'multiple_4': false,\n        'must_5': true,\n        'isTrigger': true\n      }},on:{\"eventStore\":_vm.changeStoreData}}),_vm._v(\" \"),_c('el-form-item',[_c('el-select',{attrs:{\"placeholder\":\"请选择角色\"},on:{\"change\":function($event){_vm.getDataList()}},model:{value:(_vm.dataForm.roleId),callback:function ($$v) {_vm.$set(_vm.dataForm, \"roleId\", $$v)},expression:\"dataForm.roleId\"}},_vm._l((_vm.roleArr),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}))],1),_vm._v(\" \"),_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"请输入医生姓名\",\"clearable\":\"\"},on:{\"clear\":function($event){_vm.getDataList()}},model:{value:(_vm.dataForm.nickName),callback:function ($$v) {_vm.$set(_vm.dataForm, \"nickName\", $$v)},expression:\"dataForm.nickName\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"icon\":\"el-icon-search\"},on:{\"click\":function($event){_vm.getDataList()}}},[_vm._v(\"查询\")])],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.dataListLoading),expression:\"dataListLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.dataList,\"border\":\"\",\"stripe\":\"\",\"height\":_vm.$store.state.documentClientIFRMAE,\"header-cell-style\":_vm.$cxObj.tableHeaderStyle}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"label\":\"序号\",\"align\":_vm.$store.state.common.align,\"width\":\"50px\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"StoreName\",\"header-align\":\"center\",\"align\":_vm.$store.state.common.align,\"label\":\"所属门店\",\"width\":\"100\",\"show-tooltip-when-overflow\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"NickName\",\"header-align\":\"center\",\"align\":\"center\",\"label\":\"医生\",\"min-width\":\"100\",\"show-overflow-tooltip\":true}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"RoleName\",\"header-align\":\"center\",\"align\":_vm.$store.state.common.align,\"label\":\"角色\",\"min-width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"Phone\",\"header-align\":\"center\",\"align\":_vm.$store.state.common.align,\"label\":\"联系电话\",\"min-width\":\"119\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"260\",\"header-align\":\"center\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.addOrUpdateHandle(scope.row.Id)}}},[_vm._v(\"排班编辑\\n        \")])]}}])})],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.pageIndex,\"page-sizes\":[10, 13, 20, 50, 100],\"page-size\":_vm.pageSize,\"total\":_vm.totalPage,\"layout\":\"prev, pager, next, jumper, sizes, total\",\"background\":\"\"},on:{\"size-change\":_vm.sizeChangeHandle,\"current-change\":_vm.currentChangeHandle}}),_vm._v(\" \"),(_vm.addOrUpdateVisible)?_c('add-or-update',{ref:\"addOrUpdate\",on:{\"refreshDataList\":_vm.getDataList}}):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-bdc9a892\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/scheduling/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-bdc9a892\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-bdc9a892\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-bdc9a892\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/scheduling/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}